name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t user-service .
  test:
    name: test
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: "22.x" # Use LTS version of Node.js

      - name: Install pnpm
        run: npm install -g pnpm@8.15.5 # Ensure pnpm executable is installed to the global scope

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Run tests
        run: pnpm run test

  lint:
    name: lint
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: "22.x" # Use LTS version of Node.js

      - name: Install pnpm
        run: npm install -g pnpm@8.15.5 # Ensure pnpm executable is installed to the global scope

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Run linting
        run: pnpm run lint

  typecheck:
    name: typecheck
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: "22.x" # Use LTS version of Node.js

      - name: Install pnpm
        run: npm install -g pnpm@8.15.5 # Ensure pnpm executable is installed to the global scope

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Run type checking
        run: pnpm run typecheck
